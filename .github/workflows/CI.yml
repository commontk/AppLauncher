name: CI

on:
  pull_request:
    paths-ignore:
      - "README.md"
      - "Docs/**"
  push:
    branches:
      - main
    tags:
      - "v*"
    paths-ignore:
      - "README.md"
      - "Docs/**"

jobs:
  win-tests:
    runs-on: windows-2022
    strategy:
      matrix:
        include:
          - APPLAUNCHER_CMAKE_GENERATOR: "Ninja"
            APPLAUNCHER_PACKAGE_TARGET: "package"
            # The wrapper is generated by FindVcvars CMake module used in "msvc-static-configure.cmake"
            APPLAUNCHER_BUILD_WRAPPER: "CMakeFiles/vcvarsall_wrapper.bat"

          - APPLAUNCHER_CMAKE_GENERATOR: "Visual Studio 17 2022"
            APPLAUNCHER_PACKAGE_TARGET: "PACKAGE"
            APPLAUNCHER_BUILD_WRAPPER: ""

    name: windows-2022
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          path: src

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@802fa1a2c4e212495c05bf94dba2704a92a472be # v2.0.2
        with:
          cmake-version: 3.22.2

      - name: Create directories
        run: |
          mkdir C:\Qt-static
          mkdir build

      - name: Download Qt archive
        uses: carlosperate/download-file-action@3ec6fcef61e19eaaa0236a95fbaf333f2baf341e # v2.0.2
        with:
          file-url: "https://github.com/jcfr/qt-static-build/releases/download/applauncher-5.11.2-vs2017/qt-5.11.2-static-ltcg-msvc2017-x86.zip"
          sha256: "e2531150a00d68624257d7b40c5b9d7c07feab55fbf98f7cda31f08b74b71c01"

      - name: Extract Qt archive
        shell: pwsh
        run: |
          7z x qt-5.11.2-static-ltcg-msvc2017-x86.zip -oC:\Qt-static\

      # Since only the latest VC build tools are installed on the wnidows-2022 runner,
      # this explicitly installs the component providing v141 toolset matching the one
      # used to build "qt-5.11.2-static-ltcg-msvc2017-x86.zip".
      # See https://github.com/actions/runner-images/issues/9701
      - name: Install Visual Studio components
        run: |
          Set-Location "C:\Program Files (x86)\Microsoft Visual Studio\Installer\"
          $InstallPath = "C:\Program Files\Microsoft Visual Studio\2022\Enterprise"
          $componentsToAdd= @(
            "Microsoft.VisualStudio.Component.VC.v141.x86.x64"
          )
          [string]$workloadArgs = $componentsToAdd | ForEach-Object {" --add " +  $_}
          $Arguments = ('/c', "vs_installer.exe", 'modify', '--installPath', "`"$InstallPath`"",$workloadArgs, '--quiet', '--norestart', '--nocache')
          # should be run twice
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden
          $process = Start-Process -FilePath cmd.exe -ArgumentList $Arguments -Wait -PassThru -WindowStyle Hidden

      - name: Configure
        shell: pwsh
        run: |

          $Qt5_DIR="C:\Qt-static\qt-5.11.2-static-ltcg-msvc2017-x86\lib\cmake\Qt5"
          $CTKAppLauncher_SOURCE_DIR="${{ github.workspace }}\src"
          $CTKAppLauncher_BUILD_DIR="${{ github.workspace }}\build"

          cmake `
            -DQt5_DIR:FILEPATH=$Qt5_DIR `
            -DCTKAppLauncher_SOURCE_DIR:PATH=$CTKAppLauncher_SOURCE_DIR `
            -DCTKAppLauncher_BUILD_DIR:PATH=$CTKAppLauncher_BUILD_DIR `
            -DAPPLAUNCHER_CMAKE_GENERATOR_PLATFORM:STRING=Win32 `
            -DAPPLAUNCHER_CMAKE_GENERATOR_TOOLSET:STRING=v141 `
            -P src\msvc-static-configure.cmake
        env:
          APPLAUNCHER_CMAKE_GENERATOR: ${{ matrix.APPLAUNCHER_CMAKE_GENERATOR }}

      - name: Build and package
        shell: pwsh
        run: |
          $cmd = "${{ matrix.APPLAUNCHER_BUILD_WRAPPER }} cmake --build build --config Release --target ${{ matrix.APPLAUNCHER_PACKAGE_TARGET }}"
          Invoke-Expression $cmd
          $host.SetShouldExit($LastExitCode)

      - name: Test
        shell: pwsh
        run: |
          $cmd = "${{ matrix.APPLAUNCHER_BUILD_WRAPPER }} ctest -C Release --test-dir build --output-on-failure -j4"
          Invoke-Expression $cmd
          $host.SetShouldExit($LastExitCode)

      - name: Publish packages
        if: matrix.APPLAUNCHER_CMAKE_GENERATOR == 'Visual Studio 17 2022'
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: win-packages
          path: build/CTKAppLauncher-*.tar.gz

    #- name: Setup Python
    #  uses: actions/setup-python@v5
    #  with:
    #    python-version: '3.12'

    #- name: Install scikit-ci-addons
    #  run: pip install -U scikit-ci-addons

    # See https://github.com/scikit-build/scikit-ci-addons/issues/96
    #- name: Publish packages
    #  shell: pwsh
    #  run: |
    #    cd build
    #    ci_addons publish_github_release commontk/applauncher       `
    #      --exit-success-if-missing-token                           `
    #      --prerelease-sha main                                     `
    #      --prerelease-packages CTKAppLauncher-*.tar.gz             `
    #      --prerelease-packages-clear-pattern "*win*"               `
    #      --prerelease-packages-keep-pattern "*<COMMIT_SHORT_SHA>*" `
    #      --release-packages CTKAppLauncher-*.tar.gz
    #  env:
    #    GITHUB_TOKEN: secrets.COMMONTKBOT_GITHUB_TOKEN

  linux-tests:
    runs-on: ubuntu-latest
    env:
      qt_archive_basename: qt-5.15.2-manylinux2.28-static-x86_64
      qt_archive_sha256: e5e9a19a18a3e1e896691173dd23a668781d7154238d2e6fdd4996ca30b1f1e3
      dockbuild_image: almalinux8-devtoolset14-gcc14
      dockbuild_script: ./dockbuild-almalinux8-devtoolset14-gcc14-latest
    name: ubuntu-latest [almalinux8-devtoolset14-gcc14]
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          path: src

      - name: Download Qt archive
        uses: carlosperate/download-file-action@3ec6fcef61e19eaaa0236a95fbaf333f2baf341e # v2.0.2
        with:
          file-url:
            "https://github.com/jcfr/qt-static-build/releases/download/${{
            env.qt_archive_basename }}/${{ env.qt_archive_basename }}.tar.zst"
          sha256: "${{ env.qt_archive_sha256 }}"

      - name: Extract Qt archive
        run: |
          mkdir -p $qt_archive_basename
          tar --zstd -xvf ${qt_archive_basename}.tar.zst -C ${qt_archive_basename}

      - name: Pull build enviromment
        run: |
          docker pull dockbuild/${dockbuild_image}:latest
          docker run --rm dockbuild/${dockbuild_image}:latest > ${dockbuild_script}
          chmod u+x ${dockbuild_script}

      - name: Configure
        run: |
          mkdir -p build
          ${dockbuild_script} \
            src/.github/scripts/dockbuild_with_qt_env.sh "${qt_archive_basename}" \
              cmake \
                -DQt5_DIR:PATH=/work/${qt_archive_basename}/lib/cmake/Qt5 \
                -DCTKAppLauncher_BUILD_DIR:PATH=build \
                -P src/linux-static-configure.cmake

      - name: Build
        run: |
          ${dockbuild_script} \
            src/.github/scripts/dockbuild_with_qt_env.sh "${qt_archive_basename}" \
              cmake --build build

      - name: Test
        run: |
          ${dockbuild_script} \
            src/.github/scripts/dockbuild_with_qt_env.sh "${qt_archive_basename}" \
            src/.github/scripts/dockbuild_xvfb_wrapper.sh \
               ctest \
                 --test-dir build \
                 --build-config Release \
                 --output-on-failure \
                 --parallel $(nproc)

      - name: Publish packages
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: linux-packages
          path: build/CTKAppLauncher-*.tar.gz

    #- name: Setup Python
    #  uses: actions/setup-python@v5
    #  with:
    #    python-version: '3.12'

    #- name: Install scikit-ci-addons
    #  run: pip install -U scikit-ci-addons

    # See https://github.com/scikit-build/scikit-ci-addons/issues/96
    #- name: Publish packages
    #  run: |
    #    cd src
    #    ci_addons publish_github_release commontk/applauncher \
    #      --exit-success-if-missing-token \
    #      --prerelease-sha main \
    #      --prerelease-packages ../build/CTKAppLauncher-*.tar.gz \
    #      --prerelease-packages-clear-pattern "*linux*" \
    #      --prerelease-packages-keep-pattern "*<COMMIT_SHORT_SHA>*" \
    #      --release-packages build/CTKAppLauncher-*.tar.gz
    #  env:
    #    GITHUB_TOKEN: secrets.COMMONTKBOT_GITHUB_TOKEN

  macos-tests:
    runs-on: macos-13
    name: macos-13
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0
          path: src

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@802fa1a2c4e212495c05bf94dba2704a92a472be # v2.0.2
        with:
          cmake-version: 3.22.2

      - name: Download Qt archive
        uses: carlosperate/download-file-action@3ec6fcef61e19eaaa0236a95fbaf333f2baf341e # v2.0.2
        with:
          file-url: "https://github.com/jcfr/qt-static-build/releases/download/qt-5.15.2-macosx10.13-static-x86_64/qt-5.15.2-macosx10.13-static-x86_64.tar.bz2"
          sha256: "13a1df0c939c22618fb979072c3c16191cb42f7759ea3d8ec344aa229a04bca0"

      - name: Extract Qt archive
        run: |
          tar -xjvf qt-5.15.2-macosx10.13-static-x86_64.tar.bz2
          mv qt-5.15.2-macosx10.13-static-x86_64 qt

      - name: Configure
        run: |
          cmake \
            -DQt5_DIR:DIR=$(pwd)/qt/lib/cmake/Qt5 \
            -DCMAKE_BUILD_TYPE:STRING=Release \
            -DCMAKE_OSX_DEPLOYMENT_TARGET:STRING=10.13 \
            -DCMAKE_OSX_ARCHITECTURES:STRING=x86_64 \
            -B build -S src
        env:
          CC: clang
          CXX: clang++

      - name: Build
        run: |
          cmake --build build -- -j4

      - name: Package
        run: |
          cmake --build build --target package

      # Exclude tests requiring X Display
      - name: Test
        run: |
          cd build
          ctest -LE XDisplayRequired --output-on-failure

      - name: Publish packages
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: macos-packages
          path: build/CTKAppLauncher-*.tar.gz

    #- name: Setup Python
    #  uses: actions/setup-python@v5
    #  with:
    #    python-version: '3.12'

    #- name: Install scikit-ci-addons
    #  run: pip install -U scikit-ci-addons

    # See https://github.com/scikit-build/scikit-ci-addons/issues/96
    #- name: Publish packages
    #  run: |
    #    cd src
    #    ci_addons publish_github_release commontk/applauncher \
    #      --exit-success-if-missing-token \
    #      --prerelease-sha main \
    #      --prerelease-packages ../build/CTKAppLauncher-*.tar.gz \
    #      --prerelease-packages-clear-pattern "*macosx*" \
    #      --prerelease-packages-keep-pattern "*<COMMIT_SHORT_SHA>*" \
    #      --release-packages build/CTKAppLauncher-*.tar.gz
    #  env:
    #    GITHUB_TOKEN: secrets.COMMONTKBOT_GITHUB_TOKEN
